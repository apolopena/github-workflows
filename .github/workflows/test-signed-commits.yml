name: Test Signed Commits

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: 'File path to modify'
        required: true
        default: 'test-signed-commit.md'
      file_content:
        description: 'New file content'
        required: true
        default: '# Test Signed Commit\n\nThis file was created by GitHub Actions to test automatic commit signing.'
      commit_message:
        description: 'Commit message'
        required: true
        default: 'Test signed commit via GitHub Actions API'

jobs:
  signed-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create file and commit via API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create the file content
          echo '${{ github.event.inputs.file_content }}' > '${{ github.event.inputs.file_path }}'

          # Get current commit SHA
          CURRENT_SHA=$(git rev-parse HEAD)
          echo "Current SHA: $CURRENT_SHA"

          # Create blob from file
          BLOB_SHA=$(gh api repos/${{ github.repository }}/git/blobs \
            --field content="$(base64 -w 0 '${{ github.event.inputs.file_path }}')" \
            --field encoding=base64 \
            --jq '.sha')
          echo "Blob SHA: $BLOB_SHA"

          # Get current tree
          TREE_SHA=$(gh api repos/${{ github.repository }}/git/commits/$CURRENT_SHA --jq '.tree.sha')
          echo "Tree SHA: $TREE_SHA"

          # Create new tree
          cat > tree.json << EOF
          {
            "base_tree": "$TREE_SHA",
            "tree": [
              {
                "path": "${{ github.event.inputs.file_path }}",
                "mode": "100644",
                "type": "blob",
                "sha": "$BLOB_SHA"
              }
            ]
          }
          EOF
          NEW_TREE_SHA=$(gh api repos/${{ github.repository }}/git/trees --input tree.json --jq '.sha')
          echo "New tree SHA: $NEW_TREE_SHA"

          # Create commit via API
          COMMIT_SHA=$(gh api repos/${{ github.repository }}/git/commits \
            --field message="${{ github.event.inputs.commit_message }}" \
            --field tree="$NEW_TREE_SHA" \
            --raw-field parents="[\"$CURRENT_SHA\"]" \
            --field 'author[name]=github-actions[bot]' \
            --field 'author[email]=41898282+github-actions[bot]@users.noreply.github.com' \
            --jq '.sha')
          echo "Commit SHA: $COMMIT_SHA"

          # Update main branch to point to new commit
          gh api repos/${{ github.repository }}/git/refs/heads/${{ github.ref_name }} \
            --method PATCH \
            --field sha="$COMMIT_SHA"

          # Check if commit is signed/verified
          echo "=== VERIFICATION CHECK ==="
          gh api repos/${{ github.repository }}/commits/$COMMIT_SHA \
            --jq '{sha: .sha, author: .author.login, verification: .verification}'